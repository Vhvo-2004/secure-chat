services:
  backend:
    container_name: chat-backend
    build: ./backend
    image: chat-server
    ports:
      - "127.0.0.1:${BACKEND_CONTAINER_PORT:-3000}:${BACKEND_SERVER_PORT:-3000}"
    networks:
      - chat
    environment:
      - PORT=${BACKEND_SERVER_PORT:-3000}
      - DATABASE_PORT=${MONGO_CONTAINER_PORT:-27017}
      - DATABASE_HOST=${MONGO_SERVER_HOSTNAME:-mongodb}
      - DATABASE_NAME=${MONGO_INITDB_DATABASE:-chat}
      - DATABASE_USER=${MONGO_BACKEND_USERNAME:-user}
      - DATABASE_PASSWORD=${MONGO_BACKEND_PASSWORD:-password}
      - DATABASE_REPLICA_NAME=${MONGO_REPLICA_SET_NAME:-rs0}
    depends_on:
      - mongodb
    restart: unless-stopped

  mongodb:
    container_name: chat-database
    image: mongo:8-noble
    ports:
      - "127.0.0.1:${MONGO_CONTAINER_PORT:-27017}:${MONGO_DATABASE_PORT:-27017}"
    networks:
      - chat
    volumes:
      - mongodb:/data/db
      - ./mongo.key:/etc/mongo/mongo.key # openssl rand -base64 756 > mongo.key && chmod 400 mongo.key
      - ./mongo-entrypoint.sh:/usr/local/bin/entrypoint.sh
      # - ./mongo-init.sh:/docker-entrypoint-initdb.d/init-user.sh:ro
    environment:
      MONGO_DATABASE_PORT: ${MONGO_DATABASE_PORT:-27017}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD:-admin}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE:-chat}
      MONGO_BACKEND_USERNAME: ${MONGO_BACKEND_USERNAME:-user}
      MONGO_BACKEND_PASSWORD: ${MONGO_BACKEND_PASSWORD:-password}
      MONGO_REPLICA_SET_NAME: ${MONGO_REPLICA_SET_NAME:-rs0}
    command: /usr/local/bin/entrypoint.sh
    healthcheck:
      test: |
        mongosh --host mongodb \
        --authenticationDatabase admin \
        -u ${MONGO_INITDB_ROOT_USERNAME} \
        -p ${MONGO_INITDB_ROOT_PASSWORD} \
        --eval 'quit(rs.status().ok ? 0 : 1)'
      interval: 5s
      timeout: 30s
      retries: 5
      start_period: 15s
    restart: unless-stopped


networks:
  chat:
    name: chat
    driver: bridge

volumes:
  mongodb:
    driver: local
