services:
  backend:
    container_name: chat-backend
    build: ./backend
    image: chat-server
    ports:
      - "127.0.0.1:${BACKEND_CONTAINER_PORT:-8080}:${BACKEND_SERVER_PORT:-3000}"
    networks:
      - chat
    environment:
      - PORT=${BACKEND_SERVER_PORT:-3000}
      - DATABASE_USER=${MONGO_BACKEND_USERNAME}
      - DATABASE_PASSWORD=${MONGO_BACKEND_PASSWORD}
    depends_on:
      - mongodb
    restart: unless-stopped

  mongodb:
    container_name: chat-database
    image: mvertes/alpine-mongo:4.0.6-1
    ports:
      - "127.0.0.1:${MONGO_CONTAINER_PORT:-27017}:${MONGO_DATABASE_PORT:-27017}"
    networks:
      - chat
    volumes:
      - mongodb:/data/db
      - ./mongo-init.sh:/init.sh:ro
    environment:
      MONGO_DATABASE_PORT: ${MONGO_DATABASE_PORT}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
      MONGO_BACKEND_USERNAME: ${MONGO_BACKEND_USERNAME}
      MONGO_BACKEND_PASSWORD: ${MONGO_BACKEND_PASSWORD}
    entrypoint: ["/init.sh"]
    restart: unless-stopped


networks:
  chat:
    name: chat
    driver: bridge

volumes:
  mongodb:
    driver: local
